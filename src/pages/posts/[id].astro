---
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Prose from "@/components/Prose.astro";
import Layout from "@/layouts/Layout.astro";

type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}

const post = Astro.props;

const dateFormatter = new Intl.DateTimeFormat("ja-JP", {
  dateStyle: "medium",
});

const formattedCreated = dateFormatter.format(post.data.created);

const formattedModified = dateFormatter.format(post.data.modified);

const { Content } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
	<div class="card w-auto">
		<div class="relative flex items-center justify-center">
			<h1 class="mb-3 text-2xl">
				{post.data.title}
			</h1>
		</div>
		<div class="grid grid-cols-2 text-center">
			<div>作成日: {formattedCreated}</div>
			{
				post.data.modified ? <div>更新日: {formattedModified}</div> : ""
			}
		</div>
	</div>
	<div id="content" class="border-b-2 border-current">
		<Prose>
			<Content />
		</Prose>
	</div>
	<div class="my-5 ml-auto px-3">
		<a href="/posts">記事一覧に戻る</a>
	</div>
</Layout>

<style>
	.mb-3 {
		margin-bottom: 0.75rem;
	}

	.text-2xl {
		line-height: 2.5rem;
	}

	.grid {
		display: grid;
	}

	.grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.text-center {
		text-align: center;
	}

	.border-b-2 {
		border-bottom-width: 2px;
	}

	.border-current {
		border-color: currentColor;
	}

	.my-5 {
		margin-top: 1.25rem;
		margin-bottom: 1.25rem;
	}

	.ml-auto {
		margin-left: auto;
	}

	.px-3 {
		padding-left: 0.75rem;
		padding-right: 0.75rem;
	}
</style>
